[
    /**
     * FIXES to DEFAULT BINDINGS
     */

    // Unbind exit
    { "keys": ["ctrl+q"], "command": "unbound" },

    // Unbind increase/decrease font size
    // { "keys": ["ctrl++"], "command": "unbound" },
    // { "keys": ["ctrl+="], "command": "unbound" },
    // { "keys": ["ctrl+-"], "command": "unbound" },
    // { "keys": ["ctrl+equals"], "command": "unbound" },
    { "keys": ["ctrl+keypad_plus"], "command": "unbound" },
    { "keys": ["ctrl+keypad_minus"], "command": "unbound" },
    { "keys": ["ctrl+shift+equals"], "command": "unbound" },
    { "keys": ["ctrl+keypad_plus"], "command": "unbound" },
    { "keys": ["ctrl+shift+keypad_plus"], "command": "unbound" },

    // Unbind build
    { "keys": ["f7"], "command": "unbound" },

    // Invert Paste and Paste & Indent
    { "keys": ["ctrl+v"], "command": "paste_and_indent" },
    { "keys": ["ctrl+shift+v"], "command": "paste" },

    // Paste from History
    { "keys": ["alt+ctrl+shift+v"], "command": "paste_from_history" },

    // Easier access to Palette
    { "keys": ["alt+`"], "command": "show_overlay", "args": {"overlay": "command_palette"} },
    { "keys": ["ctrl+;"], "command": "show_overlay", "args": {"overlay": "goto", "show_files": true} },
    { "keys": ["ctrl+shift+;"], "command": "show_overlay", "args": {"overlay": "command_palette"} },

    // Bind "X/HTML: Wrap Selection With Tag"
    { "keys": ["ctrl+alt+t"], "command": "insert_snippet", "args": {"name": "Packages/XML/long-tag.sublime-snippet"}, "context": [ { "key": "selector", "operator": "equal", "operand": "text.html, text.xml", "match_all": true } ] },

    // Bind reindent
    { "keys": ["ctrl+alt+i"], "command": "reindent", "args": {"single_line": false} },

    // Bind word-wrap
    { "keys": ["alt+w"], "command": "toggle_setting", "args": {"setting": "word_wrap"} },

    // Fold & unfold
    { "keys": ["super+["], "command": "fold" },
    { "keys": ["super+]"], "command": "unfold" },
    { "keys": ["super+1"], "command": "fold_by_level", "args": {"level": 1} },
    { "keys": ["super+2"], "command": "fold_by_level", "args": {"level": 2} },
    { "keys": ["super+3"], "command": "fold_by_level", "args": {"level": 3} },
    { "keys": ["super+4"], "command": "fold_by_level", "args": {"level": 4} },
    { "keys": ["super+5"], "command": "fold_by_level", "args": {"level": 5} },
    { "keys": ["super+6"], "command": "fold_by_level", "args": {"level": 6} },
    { "keys": ["super+7"], "command": "fold_by_level", "args": {"level": 7} },
    { "keys": ["super+8"], "command": "fold_by_level", "args": {"level": 8} },
    { "keys": ["super+9"], "command": "fold_by_level", "args": {"level": 9} },
    { "keys": ["super+0"], "command": "unfold_all" },

    // Build
    { "keys": ["ctrl+super+b"], "command": "show_panel", "args": {"panel": "output.exec"} },

    /**
     * PLUGINS
     */

     // Alignment
     // { "keys": ["ctrl+alt+]"], "command": "alignment" },
     { "keys": ["ctrl+alt+]"], "command": "valign" },

    // AlignTab
    // { "keys": ["ctrl+\\"], "command": "align_tab", "args": { "user_input" : "\\|" }, "context": [ { "key": "selector", "operator": "equal", "operand": "text.plain, text.html.markdown", "match_all": true } ] },

    // Fuzzy Nav
    { "keys": ["ctrl+o"], "command": "fuzzy_start_from_file" },
    { "keys": ["ctrl+shift+o"], "command": "fuzzy_bookmarks_load" },

    // Find++
    { "keys": ["ctrl+alt+f"], "command": "fpp_find_in_project" },

    // FindCursor
    { "keys": ["ctrl+."], "command": "find_cursor", "args": {"reverse": false, "pan": false} },
    { "keys": ["ctrl+shift+."], "command": "find_cursor", "args": {"reverse": true, "pan": false} },

    // Git
    { "keys": ["ctrl+shift+g"], "command": "show_overlay", "args": {"overlay": "command_palette", "text": "Git: "} },
    { "keys": ["super+g"], "command": "show_overlay", "args": {"overlay": "command_palette", "text": "Git: "} },
    { "keys": ["ctrl+super+q"], "command": "git_quick_commit" },
    { "keys": ["ctrl+super+c"], "command": "run_macro_file", "args": { "file": "res://Packages/User/Super Git Commit.sublime-macro" } },

    { "keys": ["ctrl+alt+;"], "command": "project_manager" },


    // QuickCal
    { "keys": ["ctrl+super+alt+c"], "command": "calendar" },
    { "keys": ["ctrl+super+alt+shift+c"], "command": "calendar_lookup" },
    { "keys": ["alt+right"], "command": "calendar_month_nav", "context": [ { "key": "calendar_view" } ], "args": { "reverse": false } },
    { "keys": ["alt+left"], "command": "calendar_month_nav", "context": [ { "key": "calendar_view" } ], "args": { "reverse": true } },

	// ScopeHunter
    { "keys": ["alt+shift+c"], "command": "toggle_selection_scope" },

    // SmartCursor (replace standard up/down)
    { "keys": ["up"], "command": "smart_cursor", "args": {"cmd": "move", "by": "lines", "forward": false}, "context":
        [
            { "key": "auto_complete_visible", "operator": "equal", "operand": false },
            { "key": "setting.command_mode", "operand": false },
            { "key": "setting.is_widget", "operator": "equal", "operand": false }
        ]
    },
    { "keys": ["down"], "command": "smart_cursor", "args": {"cmd": "move", "by": "lines", "forward": true}, "context":
        [
            { "key": "auto_complete_visible", "operator": "equal", "operand": false },
            { "key": "setting.command_mode", "operand": false },
            { "key": "setting.is_widget", "operator": "equal", "operand": false }
        ]
    },

    // SuperNavigator
    { "keys": ["alt+r"], "command": "super_navigate", "context": [ { "key": "panel_visible", "operator": "equal", "operand": false } ] },
    { "keys": ["shift+alt+r"], "command": "super_navigate", "args": { "allTabs": true } },

    // Terminal
    { "keys": ["ctrl+shift+t"], "command": "reopen_last_file" },
    { "keys": ["ctrl+super+t"], "command": "open_terminal" },
    { "keys": ["ctrl+super+alt+t"], "command": "open_terminal_project_folder" },

    // Typewriter
    { "keys": ["super+t"], "command": "run_macro_file", "args": { "file": "res://Packages/Typewriter/Typewriter Mode.sublime-macro" } },


    /**
     * OVERTYPE CHARACTERS
     */

    // CSS, LESS & SCSS
    { "keys": [";"], "command": "move", "args": {"by": "characters", "forward": true}, "context":
        [
            { "key": "setting.auto_match_enabled", "operator": "equal", "operand": true },
            { "key": "selection_empty", "operator": "equal", "operand": true, "match_all": true },
            // { "key": "selector", "operator": "equal", "operand": "source.css, source.less, source.scss", "match_all": true },
            { "key": "following_text", "operator": "regex_contains", "operand": "^;", "match_all": true }
        ]
    },
    { "keys": [":"], "command": "move", "args": {"by": "characters", "forward": true}, "context":
        [
            { "key": "setting.auto_match_enabled", "operator": "equal", "operand": true },
            { "key": "selection_empty", "operator": "equal", "operand": true, "match_all": true },
            // { "key": "selector", "operator": "equal", "operand": "source.css, source.less, source.scss", "match_all": true },
            { "key": "following_text", "operator": "regex_contains", "operand": "^:", "match_all": true }
        ]
    }

]
